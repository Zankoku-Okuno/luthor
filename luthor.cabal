name:               luthor
version:            0.1.0
stability:          experimental
synopsis:           Tools for lexing and utilizing lexemes that integrate with Parsec.
description:        Like parser combinators? Building a big parser? Save hundreds of
                    sloc, hours of debuging and several headaches by using Luthor
                    on top of the familiar Parsec library.
                    .
                    Parsec works great for small parsers, but as the size of the
                    parser grows, complexity can grow exponentially without taking
                    serious and tricky precautions. Luthor provides reusable
                    utilities to isolate the complex parts of parsing.
                    Amonst its weaponry are 1) more composable combinators,
                    2) pre-built token parsers, 3) tools to build a scannerful parser,
                    and 4) tools to work with indentation.
                    Luthor reduces overall complexity, generally increases performance
                    and error reporting, and cuts down on wheel re-invention.
                    .
                    BIG CAVEAT: It is difficult to understand all the ways in which 
                    Parsec fails to be composable, so there may be some combinators
                    in Luthor which fail to be composable. If you're getting weird
                    (i.e. Parsec-like) results, add a @try@ and please report.
license:            BSD3
license-file:       LICENSE
-- copyright:          
author:             Zankoku Okuno
maintainer:         zankoku.okuno@gmail.com
homepage:           https://github.com/Zankoku-Okuno/luthor
bug-reports:        https://github.com/Zankoku-Okuno/luthor/issues
category:           Text, Language
build-type:         Simple
cabal-version:      >=1.10
extra-source-files: changes.md,
                    docs/*.md, docs/*.hs, docs/*.l

library
  hs-source-dirs: src
  exposed-modules:
    Text.Luthor,
    Text.Luthor.Lex,
    Text.Luthor.Combinator,
    Text.Luthor.Syntax,
    Text.Luthor.Indent
  other-modules:
  build-depends:
    base >=4.6 && <5,
    case-insensitive ==1.*,
    mtl ==2.*,
    parsec ==3.*,
    transformers >=0.3
  default-language: Haskell2010
  default-extensions:
    DeriveFunctor,
    FlexibleContexts,
    OverloadedStrings,
    ViewPatterns
  other-extensions: ConstraintKinds


test-suite test-combinator
  hs-source-dirs: test
  type: exitcode-stdio-1.0
  main-is: combinator.hs
  build-depends:
    base,
    mtl,
    parsec,
    luthor
  default-language: Haskell2010
  default-extensions:
    FlexibleContexts,
    OverloadedStrings

test-suite test-syntax
  hs-source-dirs: test
  type: exitcode-stdio-1.0
  main-is: syntax.hs
  build-depends:
    base,
    mtl,
    parsec,
    luthor
  default-language: Haskell2010
  default-extensions:
    FlexibleContexts,
    OverloadedStrings

test-suite test-indent
  hs-source-dirs: test
  type: exitcode-stdio-1.0
  main-is: indent.hs
  build-depends:
    base,
    mtl,
    parsec,
    luthor
  default-language: Haskell2010
  default-extensions:
    FlexibleContexts,
    OverloadedStrings

source-repository head
  type: git
  location: https://github.com/Zankoku-Okuno/luthor.git
